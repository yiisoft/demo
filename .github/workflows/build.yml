on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.env.example'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.env.example'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  schedule:
    - cron: '0 0 * * *'

name: build

jobs:
  tests:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    env:
      extensions: fileinfo, pdo, pdo_sqlite, intl-70.1
      key: cache-v1
      YII_C3: true

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php:
          - 8.0
          - 8.1
          - 8.2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          tools: composer:v2
          coverage: pcov

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Determine composer cache directory on Windows
        if: matrix.os == 'windows-latest'
        run: echo "COMPOSER_CACHE_DIR=~\AppData\Local\Composer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-
      - name: Update composer
        run: composer self-update

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run tests codeception
        if: matrix.os != 'ubuntu-latest' || matrix.php != '8.0'
        run: |
          php -S 127.0.0.1:8080 -t public > ./runtime/yii.log 2>&1 &
          vendor/bin/codecept run
      - name: Run tests codeception with coverage
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.0'
        run: |
          php -S 127.0.0.1:8080 -t public > ./runtime/yii.log 2>&1 &
          vendor/bin/codecept run --coverage-xml

      - name: Upload coverage to codecov
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.0'
        uses: codecov/codecov-action@v3
        with:
          file: tests/_output/coverage.xml
