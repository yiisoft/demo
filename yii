#!/usr/bin/env php
<?php

declare(strict_types=1);

use Psr\Container\ContainerInterface;
use Yiisoft\Config\Config;
use Yiisoft\Di\Container;
use Yiisoft\Yii\Console\Application;
use Yiisoft\Yii\Console\Output\ConsoleBufferedOutput;

define('YII_ENV', getenv('env') ?: 'production');

require_once __DIR__ . '/vendor/autoload.php';

$config = new Config(
    __DIR__,
    '/config/packages',
    null,
    [
        'params',
        'events',
        'events-web',
        'events-console',
    ]
);

$container = new Container(
    $config->get('console'),
    $config->get('providers-console')
);

$container = $container->get(ContainerInterface::class);

$bootstrapList = $config->get('bootstrap-console');
foreach ($bootstrapList as $callback) {
    if (!(is_callable($callback))) {
        $type = get_debug_type($callback);

        throw new RuntimeException("Bootstrap callback must be callable, $type given.");
    }
    $callback($container);
}

/** @var Application $application */
$application = $container->get(Application::class);
$exitCode = 1;

try {
    $application->start();
    $exitCode = $application->run(null, new ConsoleBufferedOutput());
} catch (Error $error) {
    $application->renderThrowable($error, new ConsoleBufferedOutput());
} finally {
    $application->shutdown($exitCode);
    exit($exitCode);
}
